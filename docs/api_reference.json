{
  "generated_at": "2025-06-29T12:32:25.930214",
  "version": "1.0",
  "source_url": "https://razorenhanced.github.io/doc/api/",
  "modules": {
    "RE API v0.8.2.245": {
      "name": "RE API v0.8.2.245",
      "url": "https://razorenhanced.github.io/doc/api/index.html",
      "description": "API module for RE API v0.8.2.245 operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "AutoLoot": {
      "name": "AutoLoot",
      "url": "https://razorenhanced.github.io/doc/api/AutoLoot.html",
      "description": "API module for AutoLoot operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "GetList",
          "signature": "GetList(lootListName, wantMinusOnes)",
          "description": "Method for GetList operations"
        },
        {
          "name": "GetList",
          "signature": "GetList(lootListName, wantMinusOnes)",
          "description": "Method for GetList operations"
        },
        {
          "name": "GetLootBag",
          "signature": "GetLootBag()",
          "description": "Method for GetLootBag operations"
        },
        {
          "name": "GetLootBag",
          "signature": "GetLootBag()",
          "description": "Method for GetLootBag operations"
        },
        {
          "name": "ResetIgnore",
          "signature": "ResetIgnore()",
          "description": "Method for ResetIgnore operations"
        },
        {
          "name": "ResetIgnore",
          "signature": "ResetIgnore()",
          "description": "Method for ResetIgnore operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(lootListName, millisec, filter)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(lootListName, millisec, filter)",
          "description": "Method for RunOnce operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "AutoLoot.AutoLootItem": {
      "name": "AutoLoot.AutoLootItem",
      "url": "https://razorenhanced.github.io/doc/api/AutoLoot.AutoLootItem.html",
      "description": "API module for AutoLoot.AutoLootItem operations in RazorEnhanced.",
      "methods": [],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        }
      ]
    },
    "BandageHeal": {
      "name": "BandageHeal",
      "url": "https://razorenhanced.github.io/doc/api/BandageHeal.html",
      "description": "API module for BandageHeal operations in RazorEnhanced.",
      "methods": [
        {
          "name": "Start",
          "signature": "Start()",
          "description": "Method for Start operations"
        },
        {
          "name": "Start",
          "signature": "Start()",
          "description": "Method for Start operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Stop",
          "signature": "Stop()",
          "description": "Method for Stop operations"
        },
        {
          "name": "Stop",
          "signature": "Stop()",
          "description": "Method for Stop operations"
        }
      ],
      "properties": [
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "BuyAgent": {
      "name": "BuyAgent",
      "url": "https://razorenhanced.github.io/doc/api/BuyAgent.html",
      "description": "API module for BuyAgent operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "Disable",
          "signature": "Disable()",
          "description": "Method for Disable operations"
        },
        {
          "name": "Disable",
          "signature": "Disable()",
          "description": "Method for Disable operations"
        },
        {
          "name": "Enable",
          "signature": "Enable()",
          "description": "Method for Enable operations"
        },
        {
          "name": "Enable",
          "signature": "Enable()",
          "description": "Method for Enable operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "CUO": {
      "name": "CUO",
      "url": "https://razorenhanced.github.io/doc/api/CUO.html",
      "description": "API module for CUO operations in RazorEnhanced.",
      "methods": [
        {
          "name": "CloseGump",
          "signature": "CloseGump(serial)",
          "description": "Method for CloseGump operations"
        },
        {
          "name": "CloseGump",
          "signature": "CloseGump(serial)",
          "description": "Method for CloseGump operations"
        },
        {
          "name": "CloseMobileHealthBar",
          "signature": "CloseMobileHealthBar(mobileserial)",
          "description": "Method for CloseMobileHealthBar operations"
        },
        {
          "name": "CloseMobileHealthBar",
          "signature": "CloseMobileHealthBar(mobileserial)",
          "description": "Method for CloseMobileHealthBar operations"
        },
        {
          "name": "CloseMyStatusBar",
          "signature": "CloseMyStatusBar()",
          "description": "Method for CloseMyStatusBar operations"
        },
        {
          "name": "CloseMyStatusBar",
          "signature": "CloseMyStatusBar()",
          "description": "Method for CloseMyStatusBar operations"
        },
        {
          "name": "CloseTMap",
          "signature": "CloseTMap()",
          "description": "Method for CloseTMap operations"
        },
        {
          "name": "CloseTMap",
          "signature": "CloseTMap()",
          "description": "Method for CloseTMap operations"
        },
        {
          "name": "FollowMobile",
          "signature": "FollowMobile(mobileserial)",
          "description": "Method for FollowMobile operations"
        },
        {
          "name": "FollowMobile",
          "signature": "FollowMobile(mobileserial)",
          "description": "Method for FollowMobile operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "DPSMeter": {
      "name": "DPSMeter",
      "url": "https://razorenhanced.github.io/doc/api/DPSMeter.html",
      "description": "API module for DPSMeter operations in RazorEnhanced.",
      "methods": [
        {
          "name": "GetDamage",
          "signature": "GetDamage(serial)",
          "description": "Method for GetDamage operations"
        },
        {
          "name": "GetDamage",
          "signature": "GetDamage(serial)",
          "description": "Method for GetDamage operations"
        },
        {
          "name": "Pause",
          "signature": "Pause()",
          "description": "Method for Pause operations"
        },
        {
          "name": "Pause",
          "signature": "Pause()",
          "description": "Method for Pause operations"
        },
        {
          "name": "Start",
          "signature": "Start()",
          "description": "Method for Start operations"
        },
        {
          "name": "Start",
          "signature": "Start()",
          "description": "Method for Start operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Stop",
          "signature": "Stop()",
          "description": "Method for Stop operations"
        },
        {
          "name": "Stop",
          "signature": "Stop()",
          "description": "Method for Stop operations"
        }
      ],
      "properties": [
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "Dress": {
      "name": "Dress",
      "url": "https://razorenhanced.github.io/doc/api/Dress.html",
      "description": "API module for Dress operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(dresslist)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(dresslist)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "DressFStart",
          "signature": "DressFStart()",
          "description": "Method for DressFStart operations"
        },
        {
          "name": "DressFStart",
          "signature": "DressFStart()",
          "description": "Method for DressFStart operations"
        },
        {
          "name": "DressFStop",
          "signature": "DressFStop()",
          "description": "Method for DressFStop operations"
        },
        {
          "name": "DressFStop",
          "signature": "DressFStop()",
          "description": "Method for DressFStop operations"
        },
        {
          "name": "DressStatus",
          "signature": "DressStatus()",
          "description": "Method for DressStatus operations"
        },
        {
          "name": "DressStatus",
          "signature": "DressStatus()",
          "description": "Method for DressStatus operations"
        },
        {
          "name": "UnDressFStart",
          "signature": "UnDressFStart()",
          "description": "Method for UnDressFStart operations"
        },
        {
          "name": "UnDressFStart",
          "signature": "UnDressFStart()",
          "description": "Method for UnDressFStart operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "Friend": {
      "name": "Friend",
      "url": "https://razorenhanced.github.io/doc/api/Friend.html",
      "description": "API module for Friend operations in RazorEnhanced.",
      "methods": [
        {
          "name": "AddFriendTarget",
          "signature": "AddFriendTarget()",
          "description": "Method for AddFriendTarget operations"
        },
        {
          "name": "AddFriendTarget",
          "signature": "AddFriendTarget()",
          "description": "Method for AddFriendTarget operations"
        },
        {
          "name": "AddPlayer",
          "signature": "AddPlayer(friendlist, name, serial)",
          "description": "Method for AddPlayer operations"
        },
        {
          "name": "AddPlayer",
          "signature": "AddPlayer(friendlist, name, serial)",
          "description": "Method for AddPlayer operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(friendlist)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(friendlist)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "GetList",
          "signature": "GetList(friendlist)",
          "description": "Method for GetList operations"
        },
        {
          "name": "GetList",
          "signature": "GetList(friendlist)",
          "description": "Method for GetList operations"
        },
        {
          "name": "IsFriend",
          "signature": "IsFriend(serial)",
          "description": "Method for IsFriend operations"
        },
        {
          "name": "IsFriend",
          "signature": "IsFriend(serial)",
          "description": "Method for IsFriend operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Gumps": {
      "name": "Gumps",
      "url": "https://razorenhanced.github.io/doc/api/Gumps.html",
      "description": "Manages user interface gumps and dialog interactions.",
      "methods": [
        {
          "name": "AddAlphaRegion",
          "signature": "AddAlphaRegion(gd, x, y, width, height)",
          "description": "Method for AddAlphaRegion operations"
        },
        {
          "name": "AddAlphaRegion",
          "signature": "AddAlphaRegion(gd, x, y, width, height)",
          "description": "Method for AddAlphaRegion operations"
        },
        {
          "name": "AddBackground",
          "signature": "AddBackground(gd, x, y, width, height, gumpId)",
          "description": "Method for AddBackground operations"
        },
        {
          "name": "AddBackground",
          "signature": "AddBackground(gd, x, y, width, height, gumpId)",
          "description": "Method for AddBackground operations"
        },
        {
          "name": "AddButton",
          "signature": "AddButton(gd, x, y, normalID, pressedID, buttonID, type, param)",
          "description": "Method for AddButton operations"
        },
        {
          "name": "AddButton",
          "signature": "AddButton(gd, x, y, normalID, pressedID, buttonID, type, param)",
          "description": "Method for AddButton operations"
        },
        {
          "name": "AddCheck",
          "signature": "AddCheck(gd, x, y, inactiveID, activeID, initialState, switchID)",
          "description": "Method for AddCheck operations"
        },
        {
          "name": "AddCheck",
          "signature": "AddCheck(gd, x, y, inactiveID, activeID, initialState, switchID)",
          "description": "Method for AddCheck operations"
        },
        {
          "name": "AddGroup",
          "signature": "AddGroup(gd, group)",
          "description": "Method for AddGroup operations"
        },
        {
          "name": "AddGroup",
          "signature": "AddGroup(gd, group)",
          "description": "Method for AddGroup operations"
        }
      ],
      "properties": []
    },
    "Gumps.GumpData": {
      "name": "Gumps.GumpData",
      "url": "https://razorenhanced.github.io/doc/api/Gumps.GumpData.html",
      "description": "API module for Gumps.GumpData operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "HotKeyEvent": {
      "name": "HotKeyEvent",
      "url": "https://razorenhanced.github.io/doc/api/HotKeyEvent.html",
      "description": "API module for HotKeyEvent operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "Item": {
      "name": "Item",
      "url": "https://razorenhanced.github.io/doc/api/Item.html",
      "description": "API module for Item operations in RazorEnhanced.",
      "methods": [
        {
          "name": "DistanceTo",
          "signature": "DistanceTo(mob)",
          "description": "Method for DistanceTo operations"
        },
        {
          "name": "DistanceTo",
          "signature": "DistanceTo(mob)",
          "description": "Method for DistanceTo operations"
        },
        {
          "name": "Equals",
          "signature": "Equals(obj)",
          "description": "Method for Equals operations"
        },
        {
          "name": "Equals",
          "signature": "Equals(obj)",
          "description": "Method for Equals operations"
        },
        {
          "name": "GetHashCode",
          "signature": "GetHashCode()",
          "description": "Method for GetHashCode operations"
        },
        {
          "name": "GetHashCode",
          "signature": "GetHashCode()",
          "description": "Method for GetHashCode operations"
        },
        {
          "name": "GetWorldPosition",
          "signature": "GetWorldPosition()",
          "description": "Method for GetWorldPosition operations"
        },
        {
          "name": "GetWorldPosition",
          "signature": "GetWorldPosition()",
          "description": "Method for GetWorldPosition operations"
        },
        {
          "name": "IsChildOf",
          "signature": "IsChildOf(container, maxDepth)",
          "description": "Method for IsChildOf operations"
        },
        {
          "name": "IsChildOf",
          "signature": "IsChildOf(container, maxDepth)",
          "description": "Method for IsChildOf operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Position",
          "description": "Gets the position value"
        }
      ]
    },
    "Items": {
      "name": "Items",
      "url": "https://razorenhanced.github.io/doc/api/Items.html",
      "description": "Handles item manipulation, searching, and container operations.",
      "methods": [
        {
          "name": "ApplyFilter",
          "signature": "ApplyFilter(filter)",
          "description": "Method for ApplyFilter operations"
        },
        {
          "name": "ApplyFilter",
          "signature": "ApplyFilter(filter)",
          "description": "Method for ApplyFilter operations"
        },
        {
          "name": "BackpackCount",
          "signature": "BackpackCount(itemid, color)",
          "description": "Method for BackpackCount operations"
        },
        {
          "name": "BackpackCount",
          "signature": "BackpackCount(itemid, color)",
          "description": "Method for BackpackCount operations"
        },
        {
          "name": "ChangeDyeingTubColor",
          "signature": "ChangeDyeingTubColor(dyes, dyeingTub, color)",
          "description": "Method for ChangeDyeingTubColor operations"
        },
        {
          "name": "ChangeDyeingTubColor",
          "signature": "ChangeDyeingTubColor(dyes, dyeingTub, color)",
          "description": "Method for ChangeDyeingTubColor operations"
        },
        {
          "name": "Close",
          "signature": "Close(serial)",
          "description": "Method for Close operations"
        },
        {
          "name": "Close",
          "signature": "Close(serial)",
          "description": "Method for Close operations"
        },
        {
          "name": "ContainerCount",
          "signature": "ContainerCount(container, itemid, color, recursive)",
          "description": "Method for ContainerCount operations"
        },
        {
          "name": "ContainerCount",
          "signature": "ContainerCount(container, itemid, color, recursive)",
          "description": "Method for ContainerCount operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Items.Filter": {
      "name": "Items.Filter",
      "url": "https://razorenhanced.github.io/doc/api/Items.Filter.html",
      "description": "API module for Items.Filter operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ID",
          "signature": "ID (see: Item.ItemID )",
          "description": "Method for ID operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Journal": {
      "name": "Journal",
      "url": "https://razorenhanced.github.io/doc/api/Journal.html",
      "description": "Monitors and searches game messages and journal entries.",
      "methods": [
        {
          "name": "Clear",
          "signature": "Clear(toBeRemoved)",
          "description": "Method for Clear operations"
        },
        {
          "name": "Clear",
          "signature": "Clear(toBeRemoved)",
          "description": "Method for Clear operations"
        },
        {
          "name": "FilterText",
          "signature": "FilterText(text)",
          "description": "Method for FilterText operations"
        },
        {
          "name": "FilterText",
          "signature": "FilterText(text)",
          "description": "Method for FilterText operations"
        },
        {
          "name": "GetJournalEntry",
          "signature": "GetJournalEntry(afterTimestap)",
          "description": "Method for GetJournalEntry operations"
        },
        {
          "name": "GetJournalEntry",
          "signature": "GetJournalEntry(afterTimestap)",
          "description": "Method for GetJournalEntry operations"
        },
        {
          "name": "GetLineText",
          "signature": "GetLineText(text, addname)",
          "description": "Method for GetLineText operations"
        },
        {
          "name": "GetLineText",
          "signature": "GetLineText(text, addname)",
          "description": "Method for GetLineText operations"
        },
        {
          "name": "GetSpeechName",
          "signature": "GetSpeechName()",
          "description": "Method for GetSpeechName operations"
        },
        {
          "name": "GetSpeechName",
          "signature": "GetSpeechName()",
          "description": "Method for GetSpeechName operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Journal.JournalEntry": {
      "name": "Journal.JournalEntry",
      "url": "https://razorenhanced.github.io/doc/api/Journal.JournalEntry.html",
      "description": "API module for Journal.JournalEntry operations in RazorEnhanced.",
      "methods": [
        {
          "name": "Copy",
          "signature": "Copy()",
          "description": "Method for Copy operations"
        },
        {
          "name": "Copy",
          "signature": "Copy()",
          "description": "Method for Copy operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Misc": {
      "name": "Misc",
      "url": "https://razorenhanced.github.io/doc/api/Misc.html",
      "description": "Provides miscellaneous utility functions and game operations.",
      "methods": [
        {
          "name": "AllSharedValue",
          "signature": "AllSharedValue()",
          "description": "Method for AllSharedValue operations"
        },
        {
          "name": "AllSharedValue",
          "signature": "AllSharedValue()",
          "description": "Method for AllSharedValue operations"
        },
        {
          "name": "AppendNotDupToFile",
          "signature": "AppendNotDupToFile(fileName, lineOfData)",
          "description": "Method for AppendNotDupToFile operations"
        },
        {
          "name": "AppendNotDupToFile",
          "signature": "AppendNotDupToFile(fileName, lineOfData)",
          "description": "Method for AppendNotDupToFile operations"
        },
        {
          "name": "AppendToFile",
          "signature": "AppendToFile(fileName, lineOfData)",
          "description": "Method for AppendToFile operations"
        },
        {
          "name": "AppendToFile",
          "signature": "AppendToFile(fileName, lineOfData)",
          "description": "Method for AppendToFile operations"
        },
        {
          "name": "Beep",
          "signature": "Beep()",
          "description": "Method for Beep operations"
        },
        {
          "name": "Beep",
          "signature": "Beep()",
          "description": "Method for Beep operations"
        },
        {
          "name": "CancelPrompt",
          "signature": "CancelPrompt()",
          "description": "Method for CancelPrompt operations"
        },
        {
          "name": "CancelPrompt",
          "signature": "CancelPrompt()",
          "description": "Method for CancelPrompt operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Position",
          "description": "Gets the position value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "Misc.Context": {
      "name": "Misc.Context",
      "url": "https://razorenhanced.github.io/doc/api/Misc.Context.html",
      "description": "API module for Misc.Context operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "Misc.MapInfo": {
      "name": "Misc.MapInfo",
      "url": "https://razorenhanced.github.io/doc/api/Misc.MapInfo.html",
      "description": "API module for Misc.MapInfo operations in RazorEnhanced.",
      "methods": [],
      "properties": [
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Position",
          "description": "Gets the position value"
        }
      ]
    },
    "Mobile": {
      "name": "Mobile",
      "url": "https://razorenhanced.github.io/doc/api/Mobile.html",
      "description": "Manages mobile (NPC/player) interactions and information.",
      "methods": [
        {
          "name": "Paperdoll",
          "signature": "Paperdoll (or equivalent)",
          "description": "Method for Paperdoll operations"
        },
        {
          "name": "Flying",
          "signature": "Flying ( Gragoyle )",
          "description": "Method for Flying operations"
        },
        {
          "name": "DistanceTo",
          "signature": "DistanceTo(other_mobile)",
          "description": "Method for DistanceTo operations"
        },
        {
          "name": "DistanceTo",
          "signature": "DistanceTo(other_mobile)",
          "description": "Method for DistanceTo operations"
        },
        {
          "name": "Equals",
          "signature": "Equals(obj)",
          "description": "Method for Equals operations"
        },
        {
          "name": "Equals",
          "signature": "Equals(obj)",
          "description": "Method for Equals operations"
        },
        {
          "name": "GetHashCode",
          "signature": "GetHashCode()",
          "description": "Method for GetHashCode operations"
        },
        {
          "name": "GetHashCode",
          "signature": "GetHashCode()",
          "description": "Method for GetHashCode operations"
        },
        {
          "name": "GetItemOnLayer",
          "signature": "GetItemOnLayer(layer)",
          "description": "Method for GetItemOnLayer operations"
        },
        {
          "name": "GetItemOnLayer",
          "signature": "GetItemOnLayer(layer)",
          "description": "Method for GetItemOnLayer operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Position",
          "description": "Gets the position value"
        },
        {
          "name": "Hits",
          "description": "Gets the hits value"
        },
        {
          "name": "Mana",
          "description": "Gets the mana value"
        }
      ]
    },
    "Mobiles": {
      "name": "Mobiles",
      "url": "https://razorenhanced.github.io/doc/api/Mobiles.html",
      "description": "API module for Mobiles operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ApplyFilter",
          "signature": "ApplyFilter(filter)",
          "description": "Method for ApplyFilter operations"
        },
        {
          "name": "ApplyFilter",
          "signature": "ApplyFilter(filter)",
          "description": "Method for ApplyFilter operations"
        },
        {
          "name": "ContextExist",
          "signature": "ContextExist(mob, name, showContext)",
          "description": "Method for ContextExist operations"
        },
        {
          "name": "ContextExist",
          "signature": "ContextExist(mob, name, showContext)",
          "description": "Method for ContextExist operations"
        },
        {
          "name": "FindBySerial",
          "signature": "FindBySerial(serial)",
          "description": "Method for FindBySerial operations"
        },
        {
          "name": "FindBySerial",
          "signature": "FindBySerial(serial)",
          "description": "Method for FindBySerial operations"
        },
        {
          "name": "FindMobile",
          "signature": "FindMobile(graphic, notoriety, rangemax, selector, highlight)",
          "description": "Method for FindMobile operations"
        },
        {
          "name": "FindMobile",
          "signature": "FindMobile(graphic, notoriety, rangemax, selector, highlight)",
          "description": "Method for FindMobile operations"
        },
        {
          "name": "GetPropStringByIndex",
          "signature": "GetPropStringByIndex(serial, index)",
          "description": "Method for GetPropStringByIndex operations"
        },
        {
          "name": "GetPropStringByIndex",
          "signature": "GetPropStringByIndex(serial, index)",
          "description": "Method for GetPropStringByIndex operations"
        }
      ],
      "properties": [
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Mobiles.Filter": {
      "name": "Mobiles.Filter",
      "url": "https://razorenhanced.github.io/doc/api/Mobiles.Filter.html",
      "description": "API module for Mobiles.Filter operations in RazorEnhanced.",
      "methods": [
        {
          "name": "MobileID",
          "signature": "MobileID (see: Mobile.ItemID or Mobile.Body )",
          "description": "Method for MobileID operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        },
        {
          "name": "Add",
          "signature": "Add()",
          "description": "Method for Add operations"
        },
        {
          "name": "AddRange",
          "signature": "AddRange()",
          "description": "Method for AddRange operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Mobiles.TrackingInfo": {
      "name": "Mobiles.TrackingInfo",
      "url": "https://razorenhanced.github.io/doc/api/Mobiles.TrackingInfo.html",
      "description": "API module for Mobiles.TrackingInfo operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "Organizer": {
      "name": "Organizer",
      "url": "https://razorenhanced.github.io/doc/api/Organizer.html",
      "description": "API module for Organizer operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "FStart",
          "signature": "FStart()",
          "description": "Method for FStart operations"
        },
        {
          "name": "FStart",
          "signature": "FStart()",
          "description": "Method for FStart operations"
        },
        {
          "name": "FStop",
          "signature": "FStop()",
          "description": "Method for FStop operations"
        },
        {
          "name": "FStop",
          "signature": "FStop()",
          "description": "Method for FStop operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(organizerName, sourceBag, destBag, dragDelay)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(organizerName, sourceBag, destBag, dragDelay)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "PacketLogger": {
      "name": "PacketLogger",
      "url": "https://razorenhanced.github.io/doc/api/PacketLogger.html",
      "description": "API module for PacketLogger operations in RazorEnhanced.",
      "methods": [
        {
          "name": "AddBlacklist",
          "signature": "AddBlacklist(packetID)",
          "description": "Method for AddBlacklist operations"
        },
        {
          "name": "AddBlacklist",
          "signature": "AddBlacklist(packetID)",
          "description": "Method for AddBlacklist operations"
        },
        {
          "name": "DiscardAll",
          "signature": "DiscardAll()",
          "description": "Method for DiscardAll operations"
        },
        {
          "name": "AddTemplate",
          "signature": "AddTemplate(packetTemplate)",
          "description": "Method for AddTemplate operations"
        },
        {
          "name": "AddTemplate",
          "signature": "AddTemplate(packetTemplate)",
          "description": "Method for AddTemplate operations"
        },
        {
          "name": "AddWhitelist",
          "signature": "AddWhitelist(packetID)",
          "description": "Method for AddWhitelist operations"
        },
        {
          "name": "AddWhitelist",
          "signature": "AddWhitelist(packetID)",
          "description": "Method for AddWhitelist operations"
        },
        {
          "name": "DiscardAll",
          "signature": "DiscardAll()",
          "description": "Method for DiscardAll operations"
        },
        {
          "name": "DiscardAll",
          "signature": "DiscardAll(discardAll)",
          "description": "Method for DiscardAll operations"
        },
        {
          "name": "DiscardAll",
          "signature": "DiscardAll(discardAll)",
          "description": "Method for DiscardAll operations"
        }
      ],
      "properties": [
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "PacketLogger.FieldTemplate": {
      "name": "PacketLogger.FieldTemplate",
      "url": "https://razorenhanced.github.io/doc/api/PacketLogger.FieldTemplate.html",
      "description": "API module for PacketLogger.FieldTemplate operations in RazorEnhanced.",
      "methods": [],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "PacketLogger.FieldType": {
      "name": "PacketLogger.FieldType",
      "url": "https://razorenhanced.github.io/doc/api/PacketLogger.FieldType.html",
      "description": "API module for PacketLogger.FieldType operations in RazorEnhanced.",
      "methods": [
        {
          "name": "IsValid",
          "signature": "IsValid(typename)",
          "description": "Method for IsValid operations"
        },
        {
          "name": "IsValid",
          "signature": "IsValid(typename)",
          "description": "Method for IsValid operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Position",
          "description": "Gets the position value"
        }
      ]
    },
    "PacketLogger.PacketTemplate": {
      "name": "PacketLogger.PacketTemplate",
      "url": "https://razorenhanced.github.io/doc/api/PacketLogger.PacketTemplate.html",
      "description": "API module for PacketLogger.PacketTemplate operations in RazorEnhanced.",
      "methods": [
        {
          "name": "IsDynLength",
          "signature": "IsDynLength(buff[0])",
          "description": "Method for IsDynLength operations"
        }
      ],
      "properties": [
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "PathFinding": {
      "name": "PathFinding",
      "url": "https://razorenhanced.github.io/doc/api/PathFinding.html",
      "description": "API module for PathFinding operations in RazorEnhanced.",
      "methods": [
        {
          "name": "GetPath",
          "signature": "GetPath(dst_x, dst_y, ignoremob)",
          "description": "Method for GetPath operations"
        },
        {
          "name": "GetPath",
          "signature": "GetPath(dst_x, dst_y, ignoremob)",
          "description": "Method for GetPath operations"
        },
        {
          "name": "Tile",
          "signature": "Tile (coordinates)",
          "description": "Method for Tile operations"
        },
        {
          "name": "Go",
          "signature": "Go(r)",
          "description": "Method for Go operations"
        },
        {
          "name": "Go",
          "signature": "Go(r)",
          "description": "Method for Go operations"
        },
        {
          "name": "PathFindTo",
          "signature": "PathFindTo(x, y, z)",
          "description": "Method for PathFindTo operations"
        },
        {
          "name": "PathFindTo",
          "signature": "PathFindTo(x, y, z)",
          "description": "Method for PathFindTo operations"
        },
        {
          "name": "RunPath",
          "signature": "RunPath(path, timeout, debugMessage, useResync)",
          "description": "Method for RunPath operations"
        },
        {
          "name": "RunPath",
          "signature": "RunPath(path, timeout, debugMessage, useResync)",
          "description": "Method for RunPath operations"
        },
        {
          "name": "Tile",
          "signature": "Tile(x, y)",
          "description": "Method for Tile operations"
        }
      ],
      "properties": []
    },
    "PathFinding.Route": {
      "name": "PathFinding.Route",
      "url": "https://razorenhanced.github.io/doc/api/PathFinding.Route.html",
      "description": "API module for PathFinding.Route operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "Player": {
      "name": "Player",
      "url": "https://razorenhanced.github.io/doc/api/Player.html",
      "description": "Provides access to player character information, stats, and actions.",
      "methods": [
        {
          "name": "MobileID",
          "signature": "MobileID (see: Mobile.Body)",
          "description": "Method for MobileID operations"
        },
        {
          "name": "Enpowerment",
          "signature": "Enpowerment (new)",
          "description": "Method for Enpowerment operations"
        },
        {
          "name": "Oath",
          "signature": "Oath (caster)",
          "description": "Method for Oath operations"
        },
        {
          "name": "Oath",
          "signature": "Oath (curse)",
          "description": "Method for Oath operations"
        },
        {
          "name": "Despair",
          "signature": "Despair (target)",
          "description": "Method for Despair operations"
        },
        {
          "name": "Disarm",
          "signature": "Disarm (new)",
          "description": "Method for Disarm operations"
        },
        {
          "name": "One",
          "signature": "One (new)",
          "description": "Method for One operations"
        },
        {
          "name": "Focusing",
          "signature": "Focusing (target)",
          "description": "Method for Focusing operations"
        },
        {
          "name": "Focusing",
          "signature": "Focusing (target)",
          "description": "Method for Focusing operations"
        },
        {
          "name": "Body",
          "signature": "Body (see: Mobile.MobileID)",
          "description": "Method for Body operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Position",
          "description": "Gets the position value"
        },
        {
          "name": "Hits",
          "description": "Gets the hits value"
        },
        {
          "name": "Mana",
          "description": "Gets the mana value"
        },
        {
          "name": "Stamina",
          "description": "Gets the stamina value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "Point2D": {
      "name": "Point2D",
      "url": "https://razorenhanced.github.io/doc/api/Point2D.html",
      "description": "API module for Point2D operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        },
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        }
      ],
      "properties": []
    },
    "Point3D": {
      "name": "Point3D",
      "url": "https://razorenhanced.github.io/doc/api/Point3D.html",
      "description": "API module for Point3D operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        },
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        }
      ],
      "properties": []
    },
    "Property": {
      "name": "Property",
      "url": "https://razorenhanced.github.io/doc/api/Property.html",
      "description": "API module for Property operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        },
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        }
      ],
      "properties": []
    },
    "Restock": {
      "name": "Restock",
      "url": "https://razorenhanced.github.io/doc/api/Restock.html",
      "description": "API module for Restock operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "FStart",
          "signature": "FStart()",
          "description": "Method for FStart operations"
        },
        {
          "name": "FStart",
          "signature": "FStart()",
          "description": "Method for FStart operations"
        },
        {
          "name": "FStop",
          "signature": "FStop()",
          "description": "Method for FStop operations"
        },
        {
          "name": "FStop",
          "signature": "FStop()",
          "description": "Method for FStop operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(restockerName, sourceBag, destBag, dragDelay)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(restockerName, sourceBag, destBag, dragDelay)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "Scavenger": {
      "name": "Scavenger",
      "url": "https://razorenhanced.github.io/doc/api/Scavenger.html",
      "description": "API module for Scavenger operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "GetScavengerBag",
          "signature": "GetScavengerBag()",
          "description": "Method for GetScavengerBag operations"
        },
        {
          "name": "GetScavengerBag",
          "signature": "GetScavengerBag()",
          "description": "Method for GetScavengerBag operations"
        },
        {
          "name": "ResetIgnore",
          "signature": "ResetIgnore()",
          "description": "Method for ResetIgnore operations"
        },
        {
          "name": "ResetIgnore",
          "signature": "ResetIgnore()",
          "description": "Method for ResetIgnore operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(scavengerList, millisec, filter)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "RunOnce",
          "signature": "RunOnce(scavengerList, millisec, filter)",
          "description": "Method for RunOnce operations"
        },
        {
          "name": "Start",
          "signature": "Start()",
          "description": "Method for Start operations"
        },
        {
          "name": "Start",
          "signature": "Start()",
          "description": "Method for Start operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "SellAgent": {
      "name": "SellAgent",
      "url": "https://razorenhanced.github.io/doc/api/SellAgent.html",
      "description": "API module for SellAgent operations in RazorEnhanced.",
      "methods": [
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "ChangeList",
          "signature": "ChangeList(listName)",
          "description": "Method for ChangeList operations"
        },
        {
          "name": "Disable",
          "signature": "Disable()",
          "description": "Method for Disable operations"
        },
        {
          "name": "Disable",
          "signature": "Disable()",
          "description": "Method for Disable operations"
        },
        {
          "name": "Enable",
          "signature": "Enable()",
          "description": "Method for Enable operations"
        },
        {
          "name": "Enable",
          "signature": "Enable()",
          "description": "Method for Enable operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        },
        {
          "name": "Status",
          "signature": "Status()",
          "description": "Method for Status operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Status",
          "description": "Gets the status value"
        }
      ]
    },
    "Sound": {
      "name": "Sound",
      "url": "https://razorenhanced.github.io/doc/api/Sound.html",
      "description": "API module for Sound operations in RazorEnhanced.",
      "methods": [
        {
          "name": "AddFilter",
          "signature": "AddFilter(name, sounds)",
          "description": "Method for AddFilter operations"
        },
        {
          "name": "AddFilter",
          "signature": "AddFilter(name, sounds)",
          "description": "Method for AddFilter operations"
        },
        {
          "name": "Log",
          "signature": "Log(activateLogging)",
          "description": "Method for Log operations"
        },
        {
          "name": "Log",
          "signature": "Log(activateLogging)",
          "description": "Method for Log operations"
        },
        {
          "name": "OnFilter",
          "signature": "OnFilter(p, args)",
          "description": "Method for OnFilter operations"
        },
        {
          "name": "OnFilter",
          "signature": "OnFilter(p, args)",
          "description": "Method for OnFilter operations"
        },
        {
          "name": "RemoveFilter",
          "signature": "RemoveFilter(name)",
          "description": "Method for RemoveFilter operations"
        },
        {
          "name": "RemoveFilter",
          "signature": "RemoveFilter(name)",
          "description": "Method for RemoveFilter operations"
        },
        {
          "name": "WaitForSound",
          "signature": "WaitForSound(sounds, timeout)",
          "description": "Method for WaitForSound operations"
        },
        {
          "name": "WaitForSound",
          "signature": "WaitForSound(sounds, timeout)",
          "description": "Method for WaitForSound operations"
        }
      ],
      "properties": []
    },
    "Spells": {
      "name": "Spells",
      "url": "https://razorenhanced.github.io/doc/api/Spells.html",
      "description": "Handles spell casting and magic-related operations.",
      "methods": [
        {
          "name": "Cast",
          "signature": "Cast(SpellName, target, wait, waitAfter)",
          "description": "Method for Cast operations"
        },
        {
          "name": "Cast",
          "signature": "Cast(SpellName, target, wait, waitAfter)",
          "description": "Method for Cast operations"
        },
        {
          "name": "CastBushido",
          "signature": "CastBushido(SpellName, wait, waitAfter)",
          "description": "Method for CastBushido operations"
        },
        {
          "name": "CastBushido",
          "signature": "CastBushido(SpellName, wait, waitAfter)",
          "description": "Method for CastBushido operations"
        },
        {
          "name": "CastChivalry",
          "signature": "CastChivalry(SpellName, target, wait, waitAfter)",
          "description": "Method for CastChivalry operations"
        },
        {
          "name": "CastChivalry",
          "signature": "CastChivalry(SpellName, target, wait, waitAfter)",
          "description": "Method for CastChivalry operations"
        },
        {
          "name": "CastCleric",
          "signature": "CastCleric(SpellName, target, wait, waitAfter)",
          "description": "Method for CastCleric operations"
        },
        {
          "name": "CastCleric",
          "signature": "CastCleric(SpellName, target, wait, waitAfter)",
          "description": "Method for CastCleric operations"
        },
        {
          "name": "CastDruid",
          "signature": "CastDruid(SpellName, target, wait, waitAfter)",
          "description": "Method for CastDruid operations"
        },
        {
          "name": "CastDruid",
          "signature": "CastDruid(SpellName, target, wait, waitAfter)",
          "description": "Method for CastDruid operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        },
        {
          "name": "Mana",
          "description": "Gets the mana value"
        }
      ]
    },
    "Statics": {
      "name": "Statics",
      "url": "https://razorenhanced.github.io/doc/api/Statics.html",
      "description": "API module for Statics operations in RazorEnhanced.",
      "methods": [
        {
          "name": "CheckDeedHouse",
          "signature": "CheckDeedHouse(x, y)",
          "description": "Method for CheckDeedHouse operations"
        },
        {
          "name": "CheckDeedHouse",
          "signature": "CheckDeedHouse(x, y)",
          "description": "Method for CheckDeedHouse operations"
        },
        {
          "name": "GetItemData",
          "signature": "GetItemData(StaticID)",
          "description": "Method for GetItemData operations"
        },
        {
          "name": "GetItemData",
          "signature": "GetItemData(StaticID)",
          "description": "Method for GetItemData operations"
        },
        {
          "name": "GetLandFlag",
          "signature": "GetLandFlag(staticID, flagname)",
          "description": "Method for GetLandFlag operations"
        },
        {
          "name": "GetLandFlag",
          "signature": "GetLandFlag(staticID, flagname)",
          "description": "Method for GetLandFlag operations"
        },
        {
          "name": "GetLandID",
          "signature": "GetLandID(x, y, map)",
          "description": "Method for GetLandID operations"
        },
        {
          "name": "GetLandID",
          "signature": "GetLandID(x, y, map)",
          "description": "Method for GetLandID operations"
        },
        {
          "name": "GetLandName",
          "signature": "GetLandName(StaticID)",
          "description": "Method for GetLandName operations"
        },
        {
          "name": "GetLandName",
          "signature": "GetLandName(StaticID)",
          "description": "Method for GetLandName operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        }
      ]
    },
    "Statics.TileInfo": {
      "name": "Statics.TileInfo",
      "url": "https://razorenhanced.github.io/doc/api/Statics.TileInfo.html",
      "description": "API module for Statics.TileInfo operations in RazorEnhanced.",
      "methods": [],
      "properties": []
    },
    "Target": {
      "name": "Target",
      "url": "https://razorenhanced.github.io/doc/api/Target.html",
      "description": "Controls target selection and targeting operations.",
      "methods": [
        {
          "name": "AttackTargetFromList",
          "signature": "AttackTargetFromList(target_name)",
          "description": "Method for AttackTargetFromList operations"
        },
        {
          "name": "AttackTargetFromList",
          "signature": "AttackTargetFromList(target_name)",
          "description": "Method for AttackTargetFromList operations"
        },
        {
          "name": "Cancel",
          "signature": "Cancel()",
          "description": "Method for Cancel operations"
        },
        {
          "name": "Cancel",
          "signature": "Cancel()",
          "description": "Method for Cancel operations"
        },
        {
          "name": "ClearLast",
          "signature": "ClearLast()",
          "description": "Method for ClearLast operations"
        },
        {
          "name": "ClearLast",
          "signature": "ClearLast()",
          "description": "Method for ClearLast operations"
        },
        {
          "name": "ClearLastAttack",
          "signature": "ClearLastAttack()",
          "description": "Method for ClearLastAttack operations"
        },
        {
          "name": "ClearLastAttack",
          "signature": "ClearLastAttack()",
          "description": "Method for ClearLastAttack operations"
        },
        {
          "name": "ClearLastandQueue",
          "signature": "ClearLastandQueue()",
          "description": "Method for ClearLastandQueue operations"
        },
        {
          "name": "ClearLastandQueue",
          "signature": "ClearLastandQueue()",
          "description": "Method for ClearLastandQueue operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Tile": {
      "name": "Tile",
      "url": "https://razorenhanced.github.io/doc/api/Tile.html",
      "description": "API module for Tile operations in RazorEnhanced.",
      "methods": [
        {
          "name": "Equals",
          "signature": "Equals(obj)",
          "description": "Method for Equals operations"
        },
        {
          "name": "Equals",
          "signature": "Equals(obj)",
          "description": "Method for Equals operations"
        },
        {
          "name": "GetHashCode",
          "signature": "GetHashCode()",
          "description": "Method for GetHashCode operations"
        },
        {
          "name": "GetHashCode",
          "signature": "GetHashCode()",
          "description": "Method for GetHashCode operations"
        },
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        },
        {
          "name": "ToString",
          "signature": "ToString()",
          "description": "Method for ToString operations"
        }
      ],
      "properties": []
    },
    "Timer": {
      "name": "Timer",
      "url": "https://razorenhanced.github.io/doc/api/Timer.html",
      "description": "Provides timing and delay functionality for scripts.",
      "methods": [
        {
          "name": "Check",
          "signature": "Check(name)",
          "description": "Method for Check operations"
        },
        {
          "name": "Check",
          "signature": "Check(name)",
          "description": "Method for Check operations"
        },
        {
          "name": "Create",
          "signature": "Create(name, delay, message)",
          "description": "Method for Create operations"
        },
        {
          "name": "Create",
          "signature": "Create(name, delay, message)",
          "description": "Method for Create operations"
        },
        {
          "name": "Remaining",
          "signature": "Remaining(name)",
          "description": "Method for Remaining operations"
        },
        {
          "name": "Remaining",
          "signature": "Remaining(name)",
          "description": "Method for Remaining operations"
        }
      ],
      "properties": []
    },
    "Trade": {
      "name": "Trade",
      "url": "https://razorenhanced.github.io/doc/api/Trade.html",
      "description": "API module for Trade operations in RazorEnhanced.",
      "methods": [
        {
          "name": "Accept",
          "signature": "Accept(TradeID, accept)",
          "description": "Method for Accept operations"
        },
        {
          "name": "Accept",
          "signature": "Accept(TradeID, accept)",
          "description": "Method for Accept operations"
        },
        {
          "name": "Trade",
          "signature": "Trade (Default = -1: Pick a random active trade)",
          "description": "Method for Trade operations"
        },
        {
          "name": "Cancel",
          "signature": "Cancel(TradeID)",
          "description": "Method for Cancel operations"
        },
        {
          "name": "Cancel",
          "signature": "Cancel(TradeID)",
          "description": "Method for Cancel operations"
        },
        {
          "name": "Trade",
          "signature": "Trade (Default = -1: Pick a random active trade)",
          "description": "Method for Trade operations"
        },
        {
          "name": "Offer",
          "signature": "Offer(TradeID, gold, platinum, quiet)",
          "description": "Method for Offer operations"
        },
        {
          "name": "Offer",
          "signature": "Offer(TradeID, gold, platinum, quiet)",
          "description": "Method for Offer operations"
        },
        {
          "name": "Trade",
          "signature": "Trade (Default = -1: Pick latest active trade)",
          "description": "Method for Trade operations"
        },
        {
          "name": "TradeList",
          "signature": "TradeList()",
          "description": "Method for TradeList operations"
        }
      ],
      "properties": []
    },
    "Trade.TradeData": {
      "name": "Trade.TradeData",
      "url": "https://razorenhanced.github.io/doc/api/Trade.TradeData.html",
      "description": "API module for Trade.TradeData operations in RazorEnhanced.",
      "methods": [
        {
          "name": "Player",
          "signature": "Player (me)",
          "description": "Method for Player operations"
        },
        {
          "name": "Trader",
          "signature": "Trader (other)",
          "description": "Method for Trader operations"
        },
        {
          "name": "Player",
          "signature": "Player (me)",
          "description": "Method for Player operations"
        },
        {
          "name": "Trader",
          "signature": "Trader (other)",
          "description": "Method for Trader operations"
        },
        {
          "name": "Player",
          "signature": "Player (me)",
          "description": "Method for Player operations"
        },
        {
          "name": "Player",
          "signature": "Player (me)",
          "description": "Method for Player operations"
        },
        {
          "name": "Trader",
          "signature": "Trader (other)",
          "description": "Method for Trader operations"
        },
        {
          "name": "UnixTime",
          "signature": "UnixTime ( format: \"Seconds,Milliseconds\" from 1-1-1970 )",
          "description": "Method for UnixTime operations"
        },
        {
          "name": "Trader",
          "signature": "Trader (other)",
          "description": "Method for Trader operations"
        },
        {
          "name": "Player",
          "signature": "Player (me)",
          "description": "Method for Player operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Vendor": {
      "name": "Vendor",
      "url": "https://razorenhanced.github.io/doc/api/Vendor.html",
      "description": "API module for Vendor operations in RazorEnhanced.",
      "methods": [
        {
          "name": "Buy",
          "signature": "Buy(vendorSerial, itemName, amount, maxPrice)",
          "description": "Method for Buy operations"
        },
        {
          "name": "Buy",
          "signature": "Buy(vendorSerial, itemName, amount, maxPrice)",
          "description": "Method for Buy operations"
        },
        {
          "name": "BuyList",
          "signature": "BuyList(vendorSerial)",
          "description": "Method for BuyList operations"
        },
        {
          "name": "BuyList",
          "signature": "BuyList(vendorSerial)",
          "description": "Method for BuyList operations"
        },
        {
          "name": "Vendor",
          "signature": "Vendor (default: -1 - most recent trade)",
          "description": "Method for Vendor operations"
        }
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    },
    "Vendor.BuyItem": {
      "name": "Vendor.BuyItem",
      "url": "https://razorenhanced.github.io/doc/api/Vendor.BuyItem.html",
      "description": "API module for Vendor.BuyItem operations in RazorEnhanced.",
      "methods": [],
      "properties": [
        {
          "name": "Name",
          "description": "Gets the name value"
        },
        {
          "name": "Serial",
          "description": "Gets the serial value"
        }
      ]
    }
  },
  "total_modules": 49
}